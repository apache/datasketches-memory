name: Java Build, Test with JDK 8,11 

on:
  pull_request:
  push:
    branches: [ master ]
  workflow_dispatch:

env:
  MAVEN_OPTS: -Xmx4g -Xms1g
  repo_token: ${{secrets.coveralls_token}}
  RUNNER_TEMP: /tmp

jobs:
  build:
    name: Build, Test, Coverage
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        jdk: [8,11]

    # All JDKs are installed per build machine which I realize is inefficient
    # I'm not sure how to fix it.

    env:
      JDK_VERSION: ${{ matrix.jdk }}

    steps:
      - name: "Checkout ${{ github.ref }} ( ${{ github.sha }} )"
        uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: build-${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: build-${{ runner.os }}-maven-

      - name: Install JDK 8
        uses: actions/install-jdk@v2
        with:
          version: '8'
          architecture: x64
          distribution: 'adopt'
          impl: hotspot
          targets: 'JAVA8_HOME'

      - name: Install JDK 11
        uses: actions/install-jdk@v2
        with:
          version: '11'
          architecture: x64
          distribution: 'adopt'
          impl: hotspot
          targets: 'JAVA11_HOME'

      - name: Install Matrix JDK
        uses: actions/install-jdk@v2
        with:
          version: ${{ matrix.jdk }}
          architecture: x64
          impl: hotspot
          targets: 'JAVA_HOME'

      - name: Echo Java Version
        run: >
          java -version

      - name: Compile
        run: >
          mvn clean compile
          -Dmaven.javadoc.skip=true
          -Dgpg.skip=true
          --toolchains .github/workflows/.toolchains.xml
          -Dmaven.compiler.arguments="-source ${{ matrix.jdk }} -target ${{ matrix.jdk }}"

      - name: Install Dependencies
        run: >
          mvn clean install
          -DskipTests=true
          -Dgpg.skip=true
          --toolchains .github/workflows/.toolchains.xml

      - name: Package
        run: >
          mvn package
          -Dmaven.javadoc.skip=false
          -Dgpg.skip=true
          --toolchains .github/workflows/.toolchains.xml

      - name: Custom build script
        run: |
          ./tools/scripts/package-single-release-jar.sh $JAVA_HOME x.y.z .
        shell: bash

      - name: Test & Report
        if: ${{ matrix.jdk == 8 && success() }}
        run: >
          mvn verify coveralls:report -B -V
          -Dcoveralls-repo-token=${repo_token}
          -Dmaven.javadoc.skip=true
          -Dgpg.skip=true
          --toolchains .github/workflows/.toolchains.xml
